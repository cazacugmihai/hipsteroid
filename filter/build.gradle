def buildDir = 'build'
def workDir = "${buildDir}/work"
def appZip = 'hipsteroid-filter.zip'

repositories {
	mavenCentral()
	mavenRepo url: 'http://repo.springsource.org/libs-snapshot'
	add(new org.apache.ivy.plugins.resolver.URLResolver()) {
		name = 'vertx.io'
		addArtifactPattern 'http://[organisation]/downloads/[module]-[revision].[ext]'
	}
}

configurations {
	framework
	jars
}

dependencies {
	framework "vertx.io:vert.x:${vertxVersion}@zip"
	jars 'org.cloudfoundry:cloudfoundry-runtime:0.8.2',
		 'org.im4java:im4java:1.2.0'
}

task runtime(type: Copy) {
	destinationDir file("${workDir}")

	from configurations.framework
	doLast {
		ant.unzip(src: "${workDir}/vert.x-${vertxVersion}.zip", dest: "${workDir}")
		ant.delete(file: "${workDir}/vert.x-${vertxVersion}.zip")
	}
}

task build(type: Copy, dependsOn: 'runtime') {
	destinationDir file("${workDir}")

	from(configurations.jars) {
		into 'mods/hipsteroid-filter/lib'
	}
	from('src') {
		into 'mods/hipsteroid-filter'
	}
}

task assemble(type: Zip, dependsOn: 'build') {
	destinationDir = file("${buildDir}")
	outputs.dir destinationDir
	archiveName = "${appZip}"
	from file("${workDir}")
}

task clean(type: Delete) {
	delete "${buildDir}"
}

task wrapper(type: Wrapper) { gradleVersion = "1.3" }

/*
Gradle CloudFoundry plugin configuration.

Set your credentials with the -P option when you run gradle cf- commands like this:

  ./gradlw cf-push -PcfUser=username@email.com -PcfPasswd=secret

NOTE: You need to pick a different uri for the app since they have to be unique
      and the current one is already taken.
*/

buildscript {
	repositories {
		mavenCentral()
		mavenRepo url: 'http://repo.springsource.org/libs-snapshot'
	}
	dependencies {
		classpath group: 'org.gradle.api.plugins', name: 'gradle-cf-plugin', version: '0.2.0'
	}
}

apply plugin: 'cloudfoundry'

cloudfoundry {
	username = "${cfUser}"
	password = "${cfPasswd}"

	application = 'hipsteroid-filter'
	framework = 'standalone'
	runtime = 'java7'
	memory = 256
	uris = ['hipsteroid-filter.cloudfoundry.com']

//	services = ['mongodb-vtoons'] // TODO: we will need rabbit MQ here
	services = []

	file = file("${buildDir}/${appZip}")
	command = "vert.x-${vertxVersion}/bin/vertx runmod hipsteroid-filter"
}

//cloudfoundryService {
//	serviceName = 'mongodb-vtoons'
//	vendor = 'mongodb'
//	version = '1.8'
//}